"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/upload",{

/***/ "./src/pages/upload/index.tsx":
/*!************************************!*\
  !*** ./src/pages/upload/index.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @mantine/core */ \"./node_modules/@mantine/core/esm/index.js\");\n/* harmony import */ var _mantine_modals__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @mantine/modals */ \"./node_modules/@mantine/modals/esm/index.js\");\n/* harmony import */ var _mantine_notifications__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @mantine/notifications */ \"./node_modules/@mantine/notifications/esm/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var p_limit__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! p-limit */ \"./node_modules/p-limit/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! react-intl */ \"./node_modules/react-intl/lib/index.js\");\n/* harmony import */ var _components_Meta__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../components/Meta */ \"./src/components/Meta.tsx\");\n/* harmony import */ var _components_upload_Dropzone__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../components/upload/Dropzone */ \"./src/components/upload/Dropzone.tsx\");\n/* harmony import */ var _components_upload_FileList__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../components/upload/FileList */ \"./src/components/upload/FileList.tsx\");\n/* harmony import */ var _components_upload_modals_showCompletedUploadModal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../components/upload/modals/showCompletedUploadModal */ \"./src/components/upload/modals/showCompletedUploadModal.tsx\");\n/* harmony import */ var _components_upload_modals_showCreateUploadModal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../components/upload/modals/showCreateUploadModal */ \"./src/components/upload/modals/showCreateUploadModal.tsx\");\n/* harmony import */ var _hooks_config_hook__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../hooks/config.hook */ \"./src/hooks/config.hook.ts\");\n/* harmony import */ var _hooks_confirm_leave_hook__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../hooks/confirm-leave.hook */ \"./src/hooks/confirm-leave.hook.ts\");\n/* harmony import */ var _hooks_useTranslate_hook__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../hooks/useTranslate.hook */ \"./src/hooks/useTranslate.hook.ts\");\n/* harmony import */ var _hooks_user_hook__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../hooks/user.hook */ \"./src/hooks/user.hook.ts\");\n/* harmony import */ var _services_share_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../services/share.service */ \"./src/services/share.service.ts\");\n/* harmony import */ var _utils_toast_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../utils/toast.util */ \"./src/utils/toast.util.tsx\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_13__);\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst promiseLimit = (0,p_limit__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(3);\nlet errorToastShown = false;\nlet createdShare;\nconst Upload = (param)=>{\n    let { maxShareSize, isReverseShare = false, simplified } = param;\n    _s();\n    const modals = (0,_mantine_modals__WEBPACK_IMPORTED_MODULE_15__.useModals)();\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_13__.useRouter)();\n    const t = (0,_hooks_useTranslate_hook__WEBPACK_IMPORTED_MODULE_9__[\"default\"])();\n    const { user } = (0,_hooks_user_hook__WEBPACK_IMPORTED_MODULE_10__[\"default\"])();\n    const config = (0,_hooks_config_hook__WEBPACK_IMPORTED_MODULE_7__[\"default\"])();\n    const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isUploading, setisUploading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // State for folder detection\n    const [folderState, setFolderState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        items: [],\n        folders: new Set()\n    });\n    (0,_hooks_confirm_leave_hook__WEBPACK_IMPORTED_MODULE_8__[\"default\"])({\n        message: t(\"upload.notify.confirm-leave\"),\n        enabled: isUploading\n    });\n    const chunkSize = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(parseInt(config.get(\"share.chunkSize\")));\n    maxShareSize !== null && maxShareSize !== void 0 ? maxShareSize : maxShareSize = parseInt(config.get(\"share.maxSize\"));\n    const autoOpenCreateUploadModal = config.get(\"share.autoOpenShareModal\");\n    const uploadFiles = async (share, files)=>{\n        setisUploading(true);\n        try {\n            const isReverseShare = router.pathname != \"/upload\";\n            createdShare = await _services_share_service__WEBPACK_IMPORTED_MODULE_11__[\"default\"].create(share, isReverseShare);\n        } catch (e) {\n            _utils_toast_util__WEBPACK_IMPORTED_MODULE_12__[\"default\"].axiosError(e);\n            setisUploading(false);\n            return;\n        }\n        const fileUploadPromises = files.map(async (file, fileIndex)=>// Limit the number of concurrent uploads to 3\n            promiseLimit(async ()=>{\n                let fileId;\n                const setFileProgress = (progress)=>{\n                    setFiles((files)=>files.map((file, callbackIndex)=>{\n                            if (fileIndex == callbackIndex) {\n                                file.uploadingProgress = progress;\n                            }\n                            return file;\n                        }));\n                };\n                setFileProgress(1);\n                let chunks = Math.ceil(file.size / chunkSize.current);\n                // If the file is 0 bytes, we still need to upload 1 chunk\n                if (chunks == 0) chunks++;\n                for(let chunkIndex = 0; chunkIndex < chunks; chunkIndex++){\n                    const from = chunkIndex * chunkSize.current;\n                    const to = from + chunkSize.current;\n                    const blob = file.slice(from, to);\n                    try {\n                        await _services_share_service__WEBPACK_IMPORTED_MODULE_11__[\"default\"].uploadFile(createdShare.id, blob, {\n                            id: fileId,\n                            name: file.name\n                        }, chunkIndex, chunks).then((response)=>{\n                            fileId = response.id;\n                        });\n                        setFileProgress((chunkIndex + 1) / chunks * 100);\n                    } catch (e) {\n                        var _e_response;\n                        if (e instanceof axios__WEBPACK_IMPORTED_MODULE_16__.AxiosError && ((_e_response = e.response) === null || _e_response === void 0 ? void 0 : _e_response.data.error) == \"unexpected_chunk_index\") {\n                            // Retry with the expected chunk index\n                            chunkIndex = e.response.data.expectedChunkIndex - 1;\n                            continue;\n                        } else {\n                            setFileProgress(-1);\n                            // Retry after 5 seconds\n                            await new Promise((resolve)=>setTimeout(resolve, 5000));\n                            chunkIndex = -1;\n                            continue;\n                        }\n                    }\n                }\n            }));\n        Promise.all(fileUploadPromises);\n    };\n    const showCreateUploadModalCallback = (files)=>{\n        (0,_components_upload_modals_showCreateUploadModal__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(modals, {\n            isUserSignedIn: user ? true : false,\n            isReverseShare,\n            allowUnauthenticatedShares: config.get(\"share.allowUnauthenticatedShares\"),\n            enableEmailRecepients: config.get(\"email.enableShareEmailRecipients\"),\n            maxExpiration: config.get(\"share.maxExpiration\"),\n            shareIdLength: config.get(\"share.shareIdLength\"),\n            simplified\n        }, files, uploadFiles);\n    };\n    const handleDropzoneFilesChanged = (files)=>{\n        if (autoOpenCreateUploadModal) {\n            setFiles(files);\n            showCreateUploadModalCallback(files);\n        } else {\n            setFiles((oldArr)=>[\n                    ...oldArr,\n                    ...files\n                ]);\n        }\n    };\n    // Handle folder detection from the Dropzone component\n    const handleFolderDetection = (items, folders)=>{\n        setFolderState((prevState)=>{\n            // Create a new Set that includes both previous folders and new ones\n            const mergedFolders = new Set(prevState.folders);\n            folders.forEach((folder)=>mergedFolders.add(folder));\n            // Merge items, preventing duplicates based on file name\n            const existingFileNames = new Set(prevState.items.map((item)=>item.file.name));\n            const newItems = items.filter((item)=>!existingFileNames.has(item.file.name));\n            return {\n                items: [\n                    ...prevState.items,\n                    ...newItems\n                ],\n                folders: mergedFolders\n            };\n        });\n    };\n    // Handle folder state updates from FileList\n    const handleFoldersUpdated = (items, folders)=>{\n        // When folders are updated from FileList (like during deletion),\n        // we use the provided state directly as it already contains the correct data\n        setFolderState({\n            items,\n            folders\n        });\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Check if there are any files that failed to upload\n        const fileErrorCount = files.filter((file)=>file.uploadingProgress == -1).length;\n        if (fileErrorCount > 0) {\n            if (!errorToastShown) {\n                _utils_toast_util__WEBPACK_IMPORTED_MODULE_12__[\"default\"].error(t(\"upload.notify.count-failed\", {\n                    count: fileErrorCount\n                }), {\n                    withCloseButton: false,\n                    autoClose: false\n                });\n            }\n            errorToastShown = true;\n        } else {\n            (0,_mantine_notifications__WEBPACK_IMPORTED_MODULE_17__.cleanNotifications)();\n            errorToastShown = false;\n        }\n        // Complete share\n        if (files.length > 0 && files.every((file)=>file.uploadingProgress >= 100) && fileErrorCount == 0) {\n            _services_share_service__WEBPACK_IMPORTED_MODULE_11__[\"default\"].completeShare(createdShare.id).then((share)=>{\n                setisUploading(false);\n                (0,_components_upload_modals_showCompletedUploadModal__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(modals, share);\n                setFiles([]);\n            }).catch(()=>_utils_toast_util__WEBPACK_IMPORTED_MODULE_12__[\"default\"].error(t(\"upload.notify.generic-error\")));\n        }\n    }, [\n        files\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Meta__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                title: t(\"upload.title\")\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\zeunk\\\\Desktop\\\\Ryvie\\\\Ryvie-Rtrasfer\\\\frontend\\\\src\\\\pages\\\\upload\\\\index.tsx\",\n                lineNumber: 238,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_18__.Group, {\n                position: \"right\",\n                mb: 20,\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_18__.Button, {\n                    loading: isUploading,\n                    disabled: files.length <= 0,\n                    onClick: ()=>showCreateUploadModalCallback(files),\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_intl__WEBPACK_IMPORTED_MODULE_19__.FormattedMessage, {\n                        id: \"common.button.share\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\zeunk\\\\Desktop\\\\Ryvie\\\\Ryvie-Rtrasfer\\\\frontend\\\\src\\\\pages\\\\upload\\\\index.tsx\",\n                        lineNumber: 245,\n                        columnNumber: 11\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\zeunk\\\\Desktop\\\\Ryvie\\\\Ryvie-Rtrasfer\\\\frontend\\\\src\\\\pages\\\\upload\\\\index.tsx\",\n                    lineNumber: 240,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\zeunk\\\\Desktop\\\\Ryvie\\\\Ryvie-Rtrasfer\\\\frontend\\\\src\\\\pages\\\\upload\\\\index.tsx\",\n                lineNumber: 239,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_upload_Dropzone__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                title: !autoOpenCreateUploadModal && files.length > 0 ? t(\"share.edit.append-upload\") : undefined,\n                maxShareSize: maxShareSize,\n                isUploading: isUploading,\n                onFilesChanged: handleDropzoneFilesChanged,\n                onFolderDetection: handleFolderDetection\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\zeunk\\\\Desktop\\\\Ryvie\\\\Ryvie-Rtrasfer\\\\frontend\\\\src\\\\pages\\\\upload\\\\index.tsx\",\n                lineNumber: 248,\n                columnNumber: 7\n            }, undefined),\n            files.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_upload_FileList__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                files: files,\n                setFiles: setFiles,\n                uploadedItems: folderState.items,\n                onFoldersUpdated: handleFoldersUpdated\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\zeunk\\\\Desktop\\\\Ryvie\\\\Ryvie-Rtrasfer\\\\frontend\\\\src\\\\pages\\\\upload\\\\index.tsx\",\n                lineNumber: 260,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true);\n};\n_s(Upload, \"D9IOZlAk+EJI98nV9Yk9bMMR9Xo=\", false, function() {\n    return [\n        _mantine_modals__WEBPACK_IMPORTED_MODULE_15__.useModals,\n        next_router__WEBPACK_IMPORTED_MODULE_13__.useRouter,\n        _hooks_useTranslate_hook__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n        _hooks_user_hook__WEBPACK_IMPORTED_MODULE_10__[\"default\"],\n        _hooks_config_hook__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n        _hooks_confirm_leave_hook__WEBPACK_IMPORTED_MODULE_8__[\"default\"]\n    ];\n});\n_c = Upload;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Upload);\nvar _c;\n$RefreshReg$(_c, \"Upload\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/pages/upload/index.tsx\n"));

/***/ })

});